# myproject/myapp/models.py
from django.db import models

class User(models.Model):
    phone_number = models.CharField(max_length=15, blank=True, unique=True)
    email = models.EmailField(unique=True)
    password = models.CharField(max_length=128)  

class Service(models.Model):
    name = models.CharField(max_length=50)
    description = models.TextField(blank=True)
    fee = models.DecimalField(max_digits=10, decimal_places=2)

# myproject/myapp/forms.py
from django import forms

class RegistrationForm(forms.Form):
    phone_number = forms.CharField(required=False)  
    email = forms.EmailField(required=True)
    password = forms.CharField(widget=forms.PasswordInput())
    password2 = forms.CharField(widget=forms.PasswordInput(), label="Confirm Password")

    def clean(self):
        cleaned_data = super().clean()
        password = cleaned_data.get('password')
        password2 = cleaned_data.get('password2')
        if password and password != password2:
            raise forms.ValidationError("Passwords don't match")
        return cleaned_data

class ServiceSelectionForm(forms.Form):
    service = forms.ModelChoiceField(queryset=Service.objects.all())

# myproject/myapp/views.py (relevant parts)
from django.shortcuts import render, redirect
from django.contrib.auth import authenticate, login
from .forms import RegistrationForm, ServiceSelectionForm
from .models import User, Service

def register(request):

    def home(request):
        services = Service.objects.all()  # Fetch all services
        if request.method == 'POST':
            form = ServiceSelectionForm(request.POST)
        if form.is_valid():
            selected_service = form.cleaned_data['service']
            # ... (currently no payment processing, could display a confirmation message)
        return render(request, 'myapp/service_confirmation.html', {'service': selected_service})
    else:
        form = ServiceSelectionForm()
    return render(request, 'myapp/home.html', {'services': services, 'form': form})

